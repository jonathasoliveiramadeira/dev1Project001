# Generated by Django 5.0 on 2025-04-20 21:45

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Insira o nome da atividade', max_length=100, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Nome')),
                ('observacoes', models.CharField(blank=True, help_text='Insira as observações', max_length=100, null=True, verbose_name='Observações')),
                ('data', models.DateField()),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRAIL_RUN', 'Corrida de trilhas'), ('BIKE', 'Treino de bicicleta'), ('WALK', 'Caminhada'), ('HIIT', 'Treino de alta intensidade'), ('STRENGTH', 'Treino de força'), ('CARDIO', 'Treino aeróbico'), ('SWIMMING', 'Natação')], help_text='Selecione o tipo de esporte', max_length=20, verbose_name='Tipo de esporte')),
                ('inicio', models.TimeField()),
                ('duracao', models.DurationField()),
                ('distancia', models.FloatField()),
                ('ritmo', models.TimeField()),
                ('calorias', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('elevacao_total', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Clube',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Insira o nome do clube', max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Nome')),
                ('local', models.CharField(help_text='Insira o local do clube', max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Local')),
                ('pais', models.CharField(help_text='Insira o país do clube', max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='País')),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRAIL_RUN', 'Corrida de trilhas'), ('BIKE', 'Treino de bicicleta'), ('WALK', 'Caminhada'), ('HIIT', 'Treino de alta intensidade'), ('STRENGTH', 'Treino de força'), ('CARDIO', 'Treino aeróbico'), ('SWIMMING', 'Natação')], help_text='Selecione o tipo de esporte', max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Tipo de esporte')),
                ('biografia', models.TextField(blank=True, help_text='Insira a biografia', null=True, verbose_name='Biografia')),
                ('url', models.URLField(help_text='Insira a URL', max_length=150, validators=[django.core.validators.MinLengthValidator(15)], verbose_name='URL')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DesafioAtividades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Insira qual desafio', max_length=50, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Desafio')),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRAIL_RUN', 'Corrida de trilhas'), ('BIKE', 'Treino de bicicleta'), ('WALK', 'Caminhada'), ('HIIT', 'Treino de alta intensidade'), ('STRENGTH', 'Treino de força'), ('CARDIO', 'Treino aeróbico'), ('SWIMMING', 'Natação')], max_length=20)),
                ('visao_geral', models.TextField()),
                ('selo', models.CharField(max_length=5)),
                ('meta_atividades', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DesafioAtividadesTempo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Insira qual desafio', max_length=50, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Desafio')),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRAIL_RUN', 'Corrida de trilhas'), ('BIKE', 'Treino de bicicleta'), ('WALK', 'Caminhada'), ('HIIT', 'Treino de alta intensidade'), ('STRENGTH', 'Treino de força'), ('CARDIO', 'Treino aeróbico'), ('SWIMMING', 'Natação')], max_length=20)),
                ('visao_geral', models.TextField()),
                ('selo', models.CharField(max_length=5)),
                ('meta_atividades', models.IntegerField()),
                ('meta_duracao', models.TimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DesafioTempo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Insira qual desafio', max_length=50, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Desafio')),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRAIL_RUN', 'Corrida de trilhas'), ('BIKE', 'Treino de bicicleta'), ('WALK', 'Caminhada'), ('HIIT', 'Treino de alta intensidade'), ('STRENGTH', 'Treino de força'), ('CARDIO', 'Treino aeróbico'), ('SWIMMING', 'Natação')], max_length=20)),
                ('visao_geral', models.TextField()),
                ('selo', models.CharField(max_length=5)),
                ('meta_duracao', models.TimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Insira o nome do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nome')),
                ('marca', models.CharField(help_text='Insira a marca do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Marca')),
                ('modelo', models.CharField(help_text='Insira o modelo do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Modelo')),
                ('apelido', models.CharField(help_text='Insira o apelido do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Apelido')),
                ('tipo_equipamento', models.CharField(choices=[('SNEAKER', 'Tênis'), ('BIKE', 'Bicicleta'), ('SMART_DEVICE', 'Dispositivo inteligente')], help_text='Selecione o seu tipo de equipamento', max_length=20, verbose_name='Tipo de equipamento')),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRAIL_RUN', 'Corrida de trilhas'), ('BIKE', 'Treino de bicicleta'), ('WALK', 'Caminhada'), ('HIIT', 'Treino de alta intensidade'), ('STRENGTH', 'Treino de força'), ('CARDIO', 'Treino aeróbico'), ('SWIMMING', 'Natação')], help_text='Selecione o tipo de esporte', max_length=20, verbose_name='Tipo de esporte')),
                ('distancia_total', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('distancia_prevista', models.IntegerField(validators=[django.core.validators.MinValueValidator(400)])),
                ('peso', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('notas', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Insira seu Email', max_length=100, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='Email')),
                ('nome', models.CharField(help_text='Insira seu nome', max_length=100, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='Nome')),
                ('cpf', models.CharField(help_text='Insira seu CPF', max_length=11, verbose_name='CPF')),
                ('senha', models.CharField(help_text='Insira sua senha', max_length=20, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Senha')),
                ('data_nascimento', models.DateField(help_text='Qual sua data de nascimento?', verbose_name='Data de nascimento')),
                ('local', models.CharField(help_text='Insira seu local', max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Local')),
                ('pais', models.CharField(help_text='Insira seu País', max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='País')),
                ('genero', models.CharField(choices=[('MAN', 'Homem'), ('WOMAN', 'Mulher'), ('NON_BINARY', 'Não binário'), ('NOT_INFORMED', 'Não informado')], help_text='Selecione o seu gênero', max_length=20, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Gênero')),
                ('peso', models.FloatField(blank=True, default=0.0, help_text='Insira seu peso', null=True, validators=[django.core.validators.MinValueValidator(20)], verbose_name='Peso')),
                ('pagina_pessoal', models.URLField(help_text='Insira sua URL', max_length=150, validators=[django.core.validators.MinLengthValidator(15)], verbose_name='URL')),
                ('biografia', models.TextField(blank=True, help_text='Insira sua biografia', null=True, verbose_name='Biografia')),
                ('premium', models.BooleanField(default=False)),
                ('membro_desde', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome para o Recorde', max_length=20, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nome')),
                ('tipo_marca', models.CharField(choices=[('100M', '100 metros'), ('400M', '400 metros'), ('1KM', '1 quilômetro'), ('5KM', '5 quilômetros'), ('10KM', '10 quilômetros'), ('15KM', '15 quilômetros'), ('20KM', '20 quilômetros'), ('MEIA', 'Meia maratona'), ('30KM', '30 quilômetros'), ('MARATONA', 'Maratona'), ('LONGA_DISTANCIA', 'Maior distância'), ('LONGA_DURACAO', 'Maior duração')], help_text='Selecione o tipo de marca.', max_length=20, verbose_name='Tipo marca')),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRAIL_RUN', 'Corrida de trilhas'), ('BIKE', 'Treino de bicicleta'), ('WALK', 'Caminhada'), ('HIIT', 'Treino de alta intensidade'), ('STRENGTH', 'Treino de força'), ('CARDIO', 'Treino aeróbico'), ('SWIMMING', 'Natação')], help_text='Selecione o tipo de esporte', max_length=20, verbose_name='Tipo de esporte')),
                ('ritmo', models.TimeField(verbose_name='Ritmo')),
                ('duracao', models.DurationField(verbose_name='Duração')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
